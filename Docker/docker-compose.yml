version: "3.7"


services:
  ror:
    container_name: ror
    volumes:
      - ../src:/root/chat_app
    tty: true
    ports:
      - "3001:3000"
    command: 
      - /bin/bash
      - -c 
      - |
          /root/chat_app/wait-for-it.sh --timeout=0 mysql:3306
          rails db:setup
          rails db:migrate
          bundle exec rails s -p 3000 -e development -b '0.0.0.0'
    environment:
      RAILS_ENV: "development"
      REDIS_URL: "redis://redis:6379/12"
      DATABASE_URL: 'mysql2://mysql'
    build:
      context: ../src
      dockerfile: Dockerfile
    networks: ['stack']
    depends_on:
      - mysql
      - redis
      - sidekiq
      - elasticsearch

  sidekiq:
    build:
      context: ../src
      dockerfile: Dockerfile
    volumes:
      - ../src:/root/chat_app
    command: bundle exec sidekiq 
    environment:
      RAILS_ENV: "development"
      REDIS_URL: "redis://redis:6379/12"
    env_file:
      - .env
    depends_on:
      - mysql
      - redis
    networks: ['stack']

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.4.1
    environment:
      - discovery.type=single-node
    volumes:
      - ../src/instapp/elastic-data:/usr/share/elasticsearch/data
    ports:
      - "9201:9200"
      - "9301:9300"
    networks: ['stack']
    depends_on:
      - mysql
      - redis

  mysql:
    image: mysql:5.7.22
    container_name: mysql
    restart: unless-stopped
    tty: true
    ports:
      - "3307:3306"
    environment:
      MYSQL_DATABASE: dev_db
      MYSQL_USER: instabug-dev
      MYSQL_PASSWORD: root
      MYSQL_ROOT_PASSWORD: root
      MYSQL_ROOT_HOST: '%'
    networks: ['stack']


  redis:
    image: redis
    container_name: redis
    ports:
      - "6380:6379"
    networks: ['stack']

networks:
  stack:
    driver: bridge